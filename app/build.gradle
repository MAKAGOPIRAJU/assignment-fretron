// Configures the build script dependencies and repositories
buildscript {
    // Defines the Kotlin version used by the Kotlin Gradle plugin
    ext.kotlin_version = '1.6.10'

    repositories {
        // Central repository for Maven artifacts
        mavenCentral()
        // Additional repository to fetch Gradle plugins
        maven { url = uri('https://plugins.gradle.org/m2/') }
    }

    dependencies {
        // Adds the Kotlin Gradle plugin, allowing the project to build Kotlin code
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

// Applies various plugins necessary for project configuration
plugins {
    // Java plugin for building Java-based applications
    id 'java'
    // Kotlin plugin for JVM-based Kotlin projects
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    // Kotlin Annotation Processing Tool (KAPT) plugin for processing annotations (Dagger, etc.)
    id 'org.jetbrains.kotlin.kapt' version '1.6.10'

    id("application")


}

// Group and version details for the project
group = 'com.fretron'
version = '1.0-SNAPSHOT'

// Sets the project's description (can be customized or left empty)
description = """"""

// Specifies Java version compatibility for the source and target code
sourceCompatibility = 11
targetCompatibility = 11

// Configures encoding options for Java compilation
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Kotlin compilation configuration
compileKotlin {
    kotlinOptions {
        // Targets Java 11 for Kotlin code compilation
        jvmTarget = "11"
    }
}

// Kotlin test compilation configuration
compileTestKotlin {
    kotlinOptions {
        // Targets Java 11 for test Kotlin code compilation
        jvmTarget = "11"
    }
}

// External library versions are set here for reuse in dependencies
ext {
    jerseyVersion = '2.19'
    jettyVersion = '9.2.12.v20150709'
    kafkaVersion = '3.3.1'
    confluentVersion = '4.0.0'
    daggerVersion="2.16"
}

// Repositories to resolve project dependencies
repositories {
    // Maven repository for Confluent Kafka dependencies
    maven { url "https://packages.confluent.io/maven/" }
    // Standard Maven repository
    maven { url "https://repo.maven.apache.org/maven2" }
    // Central repository for Maven artifacts
    mavenCentral()
}

// Dependencies required by the project
dependencies {

    // MongoDB dependencies
    api 'org.mongodb:mongodb-driver-sync:4.7.0'

    // kafka dependencies
    implementation("org.apache.kafka:kafka-clients:3.3.1")

    // JSON processing libraries
    api "org.json:json:20170516"
    api group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // Jersey and Jetty libraries for handling HTTP and Servlet functionality
    api group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version:'2.19'
    api group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'9.2.12.v20150709'

    // grizzly server
    implementation("org.glassfish.grizzly:grizzly-http-servlet:2.1.9")
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.19' // Jersey + Jackson integration help for converting into the json
    implementation ("org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jerseyVersion")


    // Jackson libraries for JSON serialization/deserialization
    api group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.0'
    api group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.0'
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.13.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.3'




    // JAXB (Java Architecture for XML Binding) dependencies for Java 11 support
    api group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    api "javax.activation:javax.activation-api:1.2.0"
    api('org.glassfish.jaxb:jaxb-runtime:2.3.0')

    // Dependency injection using Dagger
    api "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"


    // JUnit 5
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    //Gson dependency
    implementation("com.google.code.gson:gson:2.10.1")
}

// Configuration for running tests
test {
    // Specifies that test failures will not stop the build
    ignoreFailures = true
}

tasks.test {
    useJUnitPlatform() // This tells Gradle to use JUnit 5
}


application {
    mainClass = "schoolManagement.app.AppKt"
}

